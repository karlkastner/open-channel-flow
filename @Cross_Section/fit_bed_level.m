% Thu 23 Apr 16:06:30 +08 2020
function obj = fit_bed_level(obj, Qref, w, c0)
	om = 1;
	Lb    = 0*ones(size(c0));
	Ub    = max(obj.zs)*ones(size(c0));
	switch (om)
	case {1}
		opt   = optimoptions(@patternsearch,...
			'MeshTolerance',0.001,...
			'UseParallel',false, ...
		...	'Display', 'iter', ...
			'MaxIterations',1e4);
		vararg = {c0,[],[],[],[],Lb,Ub,[],opt};
		fun = @patternsearch;
		fun_ = @(x) sum(x.^2);
		%fun_ = @(x) rms(x);
	case {2}
		opt    = optimset(); %'FinDiffRelStep',1e-3);
		fun    = @lsqnonlin;
		vararg = {c0, Lb,Ub,opt};
		fun_   = @(x) x;
	case {3}
		fun    = @surrogateopt;
		vararg = {Lb,Ub};
		fun_   = @(x) rms(x);
	end
	
		sqrt_w = sqrt(w);
		set = false;
		c     = feval(fun, @(c) fun_(  sqrt_w.*(Qref ...
							- obj.compute_discharge(set,'zb.c.param',c)) ), ...
					       vararg{:});
							%- obj.compute_discharge(set,'n.zb',c)) ), ...
%                                               - compound_cross_section_discharge ...
%						 ( ...
%							t.width,zs_, ...
%							c, ...
%					                flat(S_), ...
%							flat(t.n.initial), ...
%							t.d50.ini, ...
%							t.d90.ini, ...
%							t.T_C, ...
%							method_C{idx,2}, ...
%							... % t.dsd, ...
%							nn, ...
%							csmode, ...
%							csorder, ...
%							t.flag,true ...
%						  )).^2 ...
%					       ) ...
					..., vararg{:});
		
		% gradient matrix at optimum
		[A, res] = grad(@(c) (Qref ...               
				       - obj.compute_discharge(set,'zb.c.param',c)), cvec(c) );
				       %- obj.compute_discharge(set,'n.zb',c)), cvec(c) );
%                                               - compound_cross_section_discharge( ...
%                                                        t.width,zs_, ... 
%                                                        c, ...                  
%                                                        flat(S_), ...    
%                                                        flat(t.n.initial), ...  
%                                                        t.d50.ini, ...          
%                                                        t.d90.ini, ...          
%                                                        t.T_C, ...             
%							method_C{idx,2}, ...
%                                                        ... % t.dsd, ...
%							nn, ...           
%							csmode, ...
%                                                        csorder, ...            
%                                                        t.flag)),cvec(c));
		% residual
		% TODO use return value fo grad
%		res = Q_ - compound_cross_section_discharge( ...
%                                                        t.width,zs_, ... 
%                                                        c, ...                  
%                                                        flat(S_), ...    
%                                                        flat(t.n.initial), ...  
%                                                        t.d50.ini, ...          
%                                                        t.d90.ini, ...          
%                                                        t.T_C, ...              
%							method_C{idx,2}, ...
%                                                        ... % t.dsd, ...
%							nn, ...           
%							csmode, ...
%                                                        csorder, ...            
%                                                        t.flag);
		obj.n.zb = c;

		c_serr2  = sqrt(mean((res.*sqrt_w).^2));
		c_cov    = inv(A'*A);
		c_s      = sqrt(c_serr2.*diag(c_cov));

		obj.zb.c.param     = c;
		obj.zb.c.sparam    = c_s;
		obj.zb.c.cov       = c_cov;
		obj.zb.c.serr2     = c_serr2;
		obj.zb.c.res       = res;
end

